# Gas Market Forecast Report

Generated on {{ metadata.generated_at }}
Provenance sidecars: {% if meta_files %}{% for path in meta_files %}[{{ path }}]({{ path }}){% if not loop.last %}, {% endif %}{% endfor %}{% else %}n/a{% endif %}

## Data Sources & Provenance
| Source | Mode | As Of | Fresh | Records | Path |
| --- | --- | --- | --- | --- | --- |
{% for record in provenance -%}
| {{ record.source }} | {{ record.mode }} | {{ record.as_of|default("n/a", true) }} | {{ "yes" if record.fresh else "no" }} | {{ record.records|default("", true) }} | {{ record.path|default("", true) }} |
{% endfor %}

## Risk Dashboard
- NHC alert: **{{ "ON" if risk.nhc_alert else "OFF" }}** ({{ risk.details["nhc"]["active_storms"] }} active storms vs threshold {{ risk.details["nhc"]["threshold"] }})
- WPSR alert: **{{ "ON" if risk.wpsr_alert else "OFF" }}** (latest change {{ "%.2f"|format(risk.details["wpsr"]["latest_change"]) }} vs {{ "%.2f"|format(risk.details["wpsr"]["threshold"]) }})
- Tightness flag: **{{ "ON" if risk_flags["tightness"]["active"] else "OFF" }}**, draw {{ "%.2f"|format(risk_flags["tightness"]["gasoline_stocks_draw"]) }} mmbbl, refinery util {{ "%.1f"|format(risk_flags["tightness"]["refinery_util_pct"]) }}%
- NHC overrides: operational {{ "ON" if risk_flags["nhc"]["nhc_alert"] else "OFF" }}, analyst {{ "ON" if risk_flags["nhc"]["analyst_flag"] else "OFF" }}
{% if risk_flags["adjustments"] %}
- Tail adjustments: {% for note in risk_flags["adjustments"] -%}{{ note }}{% if not loop.last %}; {% endif %}{% endfor %}
{% else %}
- Tail adjustments: none
{% endif %}

{% if risk_context %}
{% set wpsr = risk_context.get("wpsr", {}) %}
{% set nhc = risk_context.get("nhc", {}) %}
{% set adjustments = risk_context.get("adjustments", []) %}

### Risk Metrics
| Metric | Value | Trigger |
| --- | --- | --- |
| WPSR draw (mmbbl) | {{ "%.2f"|format(wpsr.get("draw_mmb", 0.0)) }} | ≥ {{ "%.2f"|format(-wpsr.get("draw_trigger", 0.0)) }} |
| Refinery utilisation (%) | {{ "%.1f"|format(wpsr.get("refinery_util_pct", 0.0)) }} | < {{ "%.1f"|format(wpsr.get("util_trigger", 90.0)) }} |
| NHC active storms | {{ nhc.get("active_storms", 0) }} | ≥ {{ nhc.get("threshold", 1) }} |
| Analyst override | {{ "ON" if nhc.get("analyst_flag") else "OFF" }} | Manual |
{% if adjustments %}
| Tail adjustments | {{ adjustments[0] }}{% for note in adjustments[1:] %}; {{ note }}{% endfor %} | — |
{% else %}
| Tail adjustments | none | — |
{% endif %}
{% endif %}

![Risk Box]({{ figures.risk_box }})
_{{ figure_footer }}_

![Fundamentals Dashboard]({{ figures.fundamentals }})
_{{ figure_footer }}_

## Forecast Performance
### Ensemble Metrics
| Metric | Value |
| --- | --- |
{% for name, value in metrics.items() -%}
| {{ name }} | {{ "%.4f"|format(value) }} |
{% endfor %}

### Benchmarks
| Model | Brier | CRPS |
| --- | --- | --- |
{% for row in benchmarks -%}
{% set brier = row.get('brier') %}{% set crps = row.get('crps') %}
| {{ row.get('model') }} | {{ "%.4f"|format(brier) if brier is not none else "" }} | {{ "%.4f"|format(crps) if crps is not none else "" }} |
{% endfor %}
{% set freeze = risk_context.get('freeze_benchmarks') if risk_context else None %}
{% if freeze %}

### Freeze-date Metrics (central threshold)
| Model | Brier | CRPS |
| --- | --- | --- |
{% for row in freeze -%}
| {{ row.get('model') }} | {{ "%.4f"|format(row.get('brier')) if row.get('brier') is not none else "" }} | {{ "%.4f"|format(row.get('crps')) if row.get('crps') is not none else "" }} |
{% endfor %}
{% endif %}
{% if jackknife %}

**Jackknife Stability:** {{ jackknife }}
{% endif %}

### Calibration Table
| Forecast Bin | Observed Frequency | Count |
| --- | --- | --- |
{% for row in calibration -%}
| {{ "%.2f"|format(row["forecast_mean"]|default(0, true)) }} | {{ "%.2f"|format(row["outcome_rate"]|default(0, true)) }} | {{ row["count"]|default(0, true) }} |
{% endfor %}

![Forecast vs Actual]({{ figures.forecast }})
_{{ figure_footer }}_

![Calibration Curve]({{ figures.calibration }})
_{{ figure_footer }}_

## Model Outputs
![Sensitivity Bars]({{ figures.sensitivity }})
_{{ figure_footer }}_

### Posterior Snapshot
- Mean: {{ "%.4f"|format(posterior.mean) }}
- Variance: {{ "%.4f"|format(posterior.variance) }}
- 90% CI: [{{ "%.4f"|format(posterior.ci_5) }}, {{ "%.4f"|format(posterior.ci_95) }}] ({{ "%.4f"|format(posterior.ci_lower_span) }} down / {{ "%.4f"|format(posterior.ci_upper_span) }} up)
- 80% CI: [{{ "%.4f"|format(posterior.ci_10) }}, {{ "%.4f"|format(posterior.ci_90) }}]
- Prior weight: {{ "%.2f"|format(posterior.prior_weight) }} ({{ posterior.prior_weight_source }})
{% if asymmetry_ci %}
- Asymmetry: Δβ = {{ "%.4f"|format(asymmetry_ci[0]) }} (95% CI [{{ "%.4f"|format(asymmetry_ci[1]) }}, {{ "%.4f"|format(asymmetry_ci[2]) }}])
{% endif %}
{% for key, value in posterior.items() if key.startswith("prob_ge_") -%}
- {{ key }}: {{ "%.4f"|format(value) }}
{% endfor %}

![Pass-through Fit]({{ figures.pass_through }})
_{{ figure_footer }}_

![Market-implied Prior CDF]({{ figures.prior_cdf }})
_{{ figure_footer }}_

![Posterior Density]({{ figures.posterior }})
_{{ figure_footer }}_

### Sensitivity Grid (Detail)
| Threshold | ΔRBOB | ΔAlpha | Prob ≥ Threshold |
| --- | --- | --- | --- |
{% for row in sensitivity -%}
| {{ "%.2f"|format(row["threshold"]) }} | {{ "%.3f"|format(row["rbob_delta"]) }} | {{ "%.3f"|format(row["alpha_delta"]) }} | {{ "%.4f"|format(row["prob_above"]) }} |
{% endfor %}

## Appendix: Meta Files
{% for path in meta_files -%}
- {{ path }}
{% endfor %}
